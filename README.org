#+TITLE: Cappa - The Catalysis Preprint Archive

A project to aggregate preprint archives of published articles.

See http://catalysis-preprint-archive.github.io/.

* Generating Cappa
The cappa command will generate the html pages.
#+BEGIN_SRC sh
./cappa index
./cappa html
#+END_SRC


* Things to do
As each of these are done, add them as a single commit to the git repo.

** TODO Add all the recipes for repos currently at http://catalysis-preprint-archive.github.io to the recipes folder
The bibtex entries should be there. We need to add the repo links.
** TODO Add google analytics to all the pages

Add this html to the end (inside the </body> tag) of the templates.

#+BEGIN_HTML
<script type="text/javascript">
  var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
  document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-73115520-1");
  pageTracker._trackPageview();
  } catch(err) {}
</script>
#+END_HTML

** DONE Add a google custom search
** TODO Add scopus cited badge to html pages

#+BEGIN_SRC python :results output html
doi = '10.1063/1.1737365'

html = ("<object height=\"50\" data=\"http://api.elsevier.com/content/abstract/citation-count?doi=" 
        + doi 
        + "&amp;httpAccept=image/jpeg&amp;apiKey=5cd06d8a7df3de986bf3d0cd9971a47c\"></object>")

print(html)
#+END_SRC

#+RESULTS:
#+BEGIN_HTML
<object height="50" data="http://api.elsevier.com/content/abstract/citation-count?doi=10.1063/1.1737365&amp;httpAccept=image/jpeg&amp;apiKey=5cd06d8a7df3de986bf3d0cd9971a47c"></object>
#+END_HTML

** TODO Add links to Web of science related and citing to html pages based off DOI

Related articles
#+BEGIN_SRC python :results output html
doi = '10.1063/1.1737365'

url = ("http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info%3Adoi%2F"
       + doi
       + "&svc_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Asch_svc&svc.related=yes")

print("<a href=\"" + url + "\">related</a>")
#+END_SRC

#+RESULTS:
#+BEGIN_HTML
<a href="http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info%3Adoi%2F10.1021/avd&svc_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Asch_svc&svc.related=yes">related</a>
#+END_HTML

Citing articles

#+BEGIN_SRC python :results output html exports both
doi = '10.1063/1.1737365'

url = ("http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info%3Adoi%2F"
       + doi
       + "&svc_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Asch_svc&svc.citing=yes")

print("<a href=\"" + url + "\">citing</a>")
#+END_SRC

#+RESULTS:
#+BEGIN_HTML
<a href="http://ws.isiknowledge.com/cps/openurl/service?url_ver=Z39.88-2004&rft_id=info%3Adoi%2F10.1063/1.1737365&svc_val_fmt=info%3Aofi%2Ffmt%3Akev%3Amtx%3Asch_svc&svc.citing=yes">citing</a>
#+END_HTML

** TODO Figure out a reasonable citation for the index table
Maybe pybtex https://pypi.python.org/pypi/pybtex could help with this.

** TODO Add links to download the bibtex file for each html page
This might be the "recipe" link, but right now that link points to something that is not in the html folder, so the link will break when it is published. I would move this link to a "bibtex" link below the bibtex entry.

It might be easiest to copy the recipes to html/recipes and link to it in the html folder.

** TODO Add disqus to the html pages

#+BEGIN_HTML
<div id=\"disqus_thread\"></div>
<script>
 /**
 * RECOMMENDED CONFIGURATION VARIABLES: EDIT AND UNCOMMENT THE SECTION BELOW TO INSERT DYNAMIC VALUES FROM YOUR PLATFORM OR CMS.
 * LEARN WHY DEFINING THESE VARIABLES IS IMPORTANT: https://disqus.com/admin/universalcode/#configuration-variables
 */
 /*
 var disqus_config = function () {
 this.page.url = PAGE_URL; // Replace PAGE_URL with your page's canonical URL variable
 this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable
 };
 */
 (function() { // DON'T EDIT BELOW THIS LINE
 var d = document, s = d.createElement('script');

 s.src = '//cappa.disqus.com/embed.js';

 s.setAttribute('data-timestamp', +new Date());
 (d.head || d.body).appendChild(s);
 })();
</script>
<noscript>Please enable JavaScript to view the <a href=\"https://disqus.com/?ref_noscript\" rel=\"nofollow\">comments powered by Disqus.</a></noscript>



<script id=\"dsq-count-scr\" src=\"//cappa.disqus.com/count.js\" async></script>
#+END_HTML

** TODO Generate a bibtex file containing all the entries

The file will be named html/cappa.bib and contain all the recipes.

** TODO Make the index table sortable

Something like http://tablesorter.com/docs/

For now this won't be too powerful since it can sort on key, repo, and eventually citation.

** Figure out if we can get analytics info on pages and in the index.html

It would be great to show page views. I guess this is a javascript bit from Google Analytics. It could be useful to have this in the table in index.html so we could sort preprints so see the ones most viewed. https://developers.google.com/analytics/devguides/collection/analyticsjs/pages

I am not sure if we can get a sortable citation count in the table. The Scopus citation badge is an image that is dynamically updated, but not a number that is sortable. Still, we should put this badge, and a small altmetric badge in the index.html table.

** TODO Generate an RSS feed
Ideally it would only contain updates. It should be called html/rss.xml

See http://lkiesow.github.io/python-feedgen/, it looks like it might do the job. There are others too (http://flask.pocoo.org/snippets/10/, https://www.shiftedup.com/2014/11/30/rfeed-an-extensible-rss-20-generator-written-in-python).

Model it after http://catalysis-preprint-archive.github.io/updates.rss
** TODO Make a cappa package
Eventually I want to make this an installable package so other people could make a preprint archive. This will need a configuration file for:
1. A Scopus API key for citation badges
2. A Disqus setup for comments
3. A google search bar
4. Google analytics
5. Paths to html/recipes
6. Publishing details, e.g. GitHUB repo
